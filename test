-- LocalScript (StarterGui)
repeat task.wait() until game:IsLoaded()

local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Workspace = game:GetService("Workspace")
local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

local REMOTE_NAME = "jdskhfsIIIllliiIIIdchgdIiIIIlIlIli"
local remote = ReplicatedStorage:WaitForChild(REMOTE_NAME, 10)
if not remote then
    warn("RemoteEvent '"..REMOTE_NAME.."' introuvable dans ReplicatedStorage")
    return
end

-- Optional: path to the Dummy you showed earlier (change if different)
local function findDummyHumanoid()
    -- essaie de retrouver le Dummy utilisé dans ton snippet
    local ok, map = pcall(function() return Workspace:WaitForChild("MAP",1) end)
    if not ok or not map then return nil end
    local ok2, dummies = pcall(function() return map:FindFirstChild("5k_dummies") end)
    if not ok2 or not dummies then return nil end
    local dummy = dummies:FindFirstChild("Dummy2") or dummies:GetChildren()[1]
    if dummy and dummy:FindFirstChildOfClass("Humanoid") then
        return dummy:FindFirstChildOfClass("Humanoid")
    end
    return nil
end

-- UI (simple)
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "ReliableKillGUI"
screenGui.ResetOnSpawn = false
screenGui.Parent = playerGui

local frame = Instance.new("Frame", screenGui)
frame.Size = UDim2.new(0, 300, 0, 140)
frame.Position = UDim2.new(0.5, -150, 0.5, -70)
frame.BackgroundColor3 = Color3.fromRGB(36,36,36)

local title = Instance.new("TextLabel", frame)
title.Size = UDim2.new(1,0,0,24)
title.BackgroundTransparency = 1
title.Text = "Kill (Remote: "..REMOTE_NAME..")"
title.TextColor3 = Color3.new(1,1,1)
title.Font = Enum.Font.SourceSansBold
title.TextSize = 16

local status = Instance.new("TextLabel", frame)
status.Size = UDim2.new(1,-10,0,20)
status.Position = UDim2.new(0,5,0,28)
status.BackgroundTransparency = 1
status.Text = "Statut: prêt"
status.TextXAlignment = Enum.TextXAlignment.Left
status.TextColor3 = Color3.new(1,1,1)

local killBtn = Instance.new("TextButton", frame)
killBtn.Size = UDim2.new(0,140,0,36)
killBtn.Position = UDim2.new(0,8,0,56)
killBtn.Text = "Se Kill (best try)"
killBtn.Font = Enum.Font.SourceSansBold
killBtn.TextColor3 = Color3.new(1,1,1)

local dummyBtn = Instance.new("TextButton", frame)
dummyBtn.Size = UDim2.new(0,140,0,36)
dummyBtn.Position = UDim2.new(0,152,0,56)
dummyBtn.Text = "Kill via Dummy"
dummyBtn.Font = Enum.Font.SourceSansBold
dummyBtn.TextColor3 = Color3.new(1,1,1)

local closeBtn = Instance.new("TextButton", frame)
closeBtn.Size = UDim2.new(1,-16,0,18)
closeBtn.Position = UDim2.new(0,8,0,104)
closeBtn.Text = "Fermer"
closeBtn.Font = Enum.Font.SourceSans
closeBtn.TextColor3 = Color3.new(1,1,1)

-- Utility: get local humanoid
local function getLocalHumanoid()
    local char = player.Character or player.CharacterAdded:Wait()
    return char and char:FindFirstChildOfClass("Humanoid")
end

-- Main: attempt to send the exact pattern you found (targetHumanoid, math.huge)
local function sendPrimaryPattern(targetHum)
    if not targetHum then return false, "targetHum nil" end
    local ok, err = pcall(function()
        remote:FireServer(targetHum, math.huge)
    end)
    return ok, err
end

-- Secondary: fallback pattern (dictionary style) if needed
local function sendSecondaryPattern(targetHum)
    if not targetHum then return false, "targetHum nil" end
    local ok, err = pcall(function()
        remote:FireServer("damage", { EnemyHumanoid = targetHum })
    end)
    return ok, err
end

-- Try patterns in order and return whether any succeeded (pcall ok)
local function trySendForHumanoid(targetHum)
    local ok, err

    -- 1) pattern matching your observed snippet
    ok, err = sendPrimaryPattern(targetHum)
    if ok then return true, "primary OK" end

    -- 2) alternative often used in game code
    ok, err = sendSecondaryPattern(targetHum)
    if ok then return true, "secondary OK" end

    -- 3) last attempt: simple FireServer(humanoid)
    ok, err = pcall(function() remote:FireServer(targetHum) end)
    if ok then return true, "simple OK" end

    return false, ("all attempts failed; last err: "..tostring(err))
end

-- Single clean kill attempt that prefers server-side registration
local function doReliableKillOn(targetHum)
    status.Text = "Statut: tentative serveur..."
    local success, info = trySendForHumanoid(targetHum)
    task.wait(0.2) -- laissons le serveur traiter
    local localHum = getLocalHumanoid()
    -- Si le serveur n'a pas tué (ou n'accepte pas l'auto-damage), on force côté client
    if localHum and localHum.Health > 0 then
        -- petit délai supplémentaire pour s'assurer que le serveur a eu le temps
        task.wait(0.15)
        if localHum.Health > 0 then
            pcall(function() localHum.Health = 0 end)
            status.Text = "Statut: fallback local (mort forcée)"
            return
        end
    end
    status.Text = success and ("Statut: envoyé -> "..tostring(info)) or ("Statut: échec -> "..tostring(info))
end

-- Button connections
killBtn.MouseButton1Click:Connect(function()
    killBtn.Text = "Envoi..."
    local hum = getLocalHumanoid()
    local ok, info = trySendForHumanoid(hum)
    task.wait(0.25)
    -- if server didn't apply damage, ensure local death
    if hum and hum.Health > 0 then
        pcall(function() hum.Health = 0 end)
    end
    status.Text = ok and ("Statut: envoyé ("..tostring(info)..")") or ("Statut: erreur ("..tostring(info)..")")
    killBtn.Text = "Se Kill (best try)"
end)

dummyBtn.MouseButton1Click:Connect(function()
    dummyBtn.Text = "Envoi à Dummy..."
    local dummyHum = findDummyHumanoid()
    if not dummyHum then
        status.Text = "Statut: Dummy introuvable"
        dummyBtn.Text = "Kill via Dummy"
        return
    end
    -- Envoie l'appel exactement comme dans ton extrait (DummyHumanoid, math.huge)
    local ok, info = trySendForHumanoid(dummyHum)
    status.Text = ok and ("Statut: envoyé à Dummy") or ("Statut: échec Dummy -> "..tostring(info))
    dummyBtn.Text = "Kill via Dummy"
end)

closeBtn.MouseButton1Click:Connect(function()
    screenGui:Destroy()
end)

status.Text = "Statut: prêt (envoi prioritaire: targetHum, math.huge)"
